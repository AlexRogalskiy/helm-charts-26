### Image
image:
  image: kestra/kestra
  tag: latest
  pullPolicy: IfNotPresent

imagePullSecrets: []


### Configurations for deployments
configuration: {}


### Secrets for deployments
secrets: {}


### configuration files
configurationPath:

### Deployments
deployments:
  webserver:
    enabled: true
    kind: Deployment
    replicaCount: 1
    command:
      - sh
      - -c
      - "/app/kestra server webserver"
    resources: {}
    nodeSelector: {}
    tolerations: []
    affinity: {}
    strategy: {}
    autoscaler:
      enabled: false
      minReplicas: 1
      maxReplicas: 3
      extra: {}
      metrics: []
      #  - type: Resource
      #    resource:
      #      name: cpu
      #      target:
      #        type: Utilization
      #        averageUtilization: 50
      #  - type: Resource
      #    resource:
      #      name: memory
      #      target:
      #        type: AverageValue
      #        averageValue: 100Mi

  executor:
    enabled: true
    kind: Deployment
    command:
      - sh
      - -c
      - "/app/kestra server executor"

  indexer:
    enabled: true
    kind: Deployment
    command:
      - sh
      - -c
      - "/app/kestra server indexer"

  scheduler:
    enabled: true
    kind: Deployment

    command:
      - sh
      - -c
      - "/app/kestra server scheduler"
    strategy:
      type: Recreate

  worker:
    enabled: true
    kind: DaemonSet
    command:
      - sh
      - -c
      - "/app/kestra server worker --thread=16"


### Kafka
kafka:
  enabled: false


### ElasticSearch
elasticsearch:
  enabled: false
  clusterName: "es-kestra"


### Services
service:
  type: ClusterIP
  port: 8080
  annotations: {}


### Ingress
ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: kestra.local
      paths: []

  tls: []
  #  - secretName: kestra-tls
  #    hosts:
  #      - kestra.local


### Global Deployement
nameOverride: ""
serviceAccountName: ""


### Annotations for deployments
annotations: {}
podAnnotations: {}
initContainers: []

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
#   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

extraVolumeMounts: []

extraVolumes: []

extraEnv: []


### Readiness / Liveness probe config.
### ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/
readinessProbe:
  enabled: true
  path: /health
  port: management
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 3

livenessProbe:
  enabled: true
  path: /health
  port: management
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 3
