### Image
image:
  image: kestra/kestra
  tag: latest
  pullPolicy: IfNotPresent

imagePullSecrets: []


### Configurations for deployments
configuration: {}


### Secrets for deployments
secrets: {}


### Deployments
deployments:
  webserver:
    enabled: true
    command:
      - sh
      - -c
      - "/app/kestra server webserver"
    resources: {}
    nodeSelector: {}
    tolerations: []
    affinity: {}

  executor:
    enabled: true
    command:
      - sh
      - -c
      - "/app/kestra server executor"

  indexer:
    enabled: true
    command:
      - sh
      - -c
      - "/app/kestra server indexer"

  worker:
    enabled: true
    replicaCount: 3
    command:
      - sh
      - -c
      - "/app/kestra server worker"


### Kafka
kafka:
  enabled: false
  imageTag: "5.3.2"


### ElasticSearch
elasticsearch:
  enabled: false
  image: "docker.elastic.co/elasticsearch/elasticsearch-oss"
  clusterName: "es-kestra"


### Services
service:
  type: ClusterIP
  port: 8080
  annotations: {}

### Ingress
ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local


### Global Deployement
nameOverride: ""

### Annotations for deployments
annotations: {}
podAnnotations: {}


resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
#   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

extraVolumeMounts: {}

extraVolumes: {}

extraEnv: []
